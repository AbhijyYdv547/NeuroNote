// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int              @id @default(autoincrement())
  name        String
  email       String           @unique
  password    String
  rooms       Room[]           @relation("RoomAdmin")
  chats       Chat[]           @relation("UserChats")
  memberships RoomMembership[]
}

model Room {
  id         Int              @id @default(autoincrement())
  slug       String           @unique
  adminId    Int
  admin      User             @relation("RoomAdmin", fields: [adminId], references: [id])
  chats      Chat[]
  documentId String?          @unique // FK to Document
  document   Document?        @relation(fields: [documentId], references: [id])
  members    RoomMembership[]
  secretCode String           @unique
}

model Chat {
  id        Int      @id @default(autoincrement())
  roomId    Int
  senderId  Int
  sender    User     @relation("UserChats", fields: [senderId], references: [id])
  message   String
  timestamp DateTime @default(now())
  room      Room     @relation(fields: [roomId], references: [id])
}

model Document {
  id        String   @id
  content   Bytes
  updatedAt DateTime @updatedAt
  room      Room?
}

model RoomMembership {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  room   Room @relation(fields: [roomId], references: [id])
  roomId Int

  @@unique([userId, roomId])
}
